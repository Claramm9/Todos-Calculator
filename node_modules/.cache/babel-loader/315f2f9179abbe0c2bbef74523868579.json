{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\744338\\\\Desktop\\\\Todos-Calculator\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\744338\\\\Desktop\\\\Todos-Calculator\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n// the reducer returns the next state\n// Take two parameters: state and action\nimport { ADD_TODO, RESET_ALL, FILTER_TODO, CLEAR_TODOS_COMPLETED, COMPLETE_TODO } from '../actions/actionTypes';\nimport initialState from '../models';\n\nvar todosReducer = function todosReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action);\n\n  switch (action.type) {\n    case ADD_TODO:\n      return _objectSpread({}, state, {\n        todos: [action.payload].concat(_toConsumableArray(state.todos))\n      });\n\n    case COMPLETE_TODO:\n      return _objectSpread({}, state, {\n        todos: action.payload\n      });\n\n    case RESET_ALL:\n      return _objectSpread({}, state, {\n        todos: []\n      });\n\n    case FILTER_TODO:\n      return _objectSpread({}, state, {\n        filter: action.payload\n      });\n\n    case CLEAR_TODOS_COMPLETED:\n      return _objectSpread({}, state, {\n        todos: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;","map":{"version":3,"sources":["C:\\Users\\744338\\Desktop\\Todos-Calculator\\src\\containers\\Todos\\reducers\\todosReducer.js"],"names":["ADD_TODO","RESET_ALL","FILTER_TODO","CLEAR_TODOS_COMPLETED","COMPLETE_TODO","initialState","todosReducer","state","action","console","log","type","todos","payload","filter"],"mappings":";;AAAA;AACA;AACA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,EAA2CC,qBAA3C,EAAkEC,aAAlE,QAAuF,wBAAvF;AACA,OAAOC,YAAP,MAAyB,WAAzB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAKX,QAAL;AACI,+BAAYO,KAAZ;AAAmBK,QAAAA,KAAK,GAAGJ,MAAM,CAACK,OAAV,4BAAsBN,KAAK,CAACK,KAA5B;AAAxB;;AACJ,SAAKR,aAAL;AACI,+BAAYG,KAAZ;AAAmBK,QAAAA,KAAK,EAAEJ,MAAM,CAACK;AAAjC;;AACJ,SAAKZ,SAAL;AACI,+BAAYM,KAAZ;AAAmBK,QAAAA,KAAK,EAAC;AAAzB;;AACJ,SAAKV,WAAL;AACI,+BAAYK,KAAZ;AAAmBO,QAAAA,MAAM,EAAEN,MAAM,CAACK;AAAlC;;AACJ,SAAKV,qBAAL;AACI,+BAAYI,KAAZ;AAAmBK,QAAAA,KAAK,EAAEJ,MAAM,CAACK;AAAjC;;AACJ;AACI,aAAON,KAAP;AAZR;AAcH,CAhBD;;AAkBA,eAAeD,YAAf","sourcesContent":["// the reducer returns the next state\r\n// Take two parameters: state and action\r\nimport { ADD_TODO, RESET_ALL, FILTER_TODO, CLEAR_TODOS_COMPLETED, COMPLETE_TODO } from '../actions/actionTypes';\r\nimport initialState from '../models';\r\n\r\nconst todosReducer = (state = initialState, action) => {\r\n    console.log(action)\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            return { ...state, todos: [action.payload, ...state.todos]};\r\n        case COMPLETE_TODO:\r\n            return { ...state, todos: action.payload}\r\n        case RESET_ALL:\r\n            return { ...state, todos:[]};\r\n        case FILTER_TODO:\r\n            return { ...state, filter: action.payload};\r\n        case CLEAR_TODOS_COMPLETED:\r\n            return { ...state, todos: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default todosReducer;"]},"metadata":{},"sourceType":"module"}