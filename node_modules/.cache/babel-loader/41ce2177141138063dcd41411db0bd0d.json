{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\744338\\\\Desktop\\\\Todos-Calculator\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\744338\\\\Desktop\\\\Todos-Calculator\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\744338\\\\Desktop\\\\Todos-Calculator\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\744338\\\\Desktop\\\\Todos-Calculator\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\744338\\\\Desktop\\\\Todos-Calculator\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\744338\\\\Desktop\\\\Todos-Calculator\\\\src\\\\containers\\\\Calculator\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport Element from './components/Element';\nimport Display from './components/Display';\nimport { connect } from 'react-redux';\nimport { clickButton as _clickButton, clickOperator, clearDisplay as _clearDisplay } from './actions/calculatorActions';\nimport './styles.css';\nimport '../../styles.css';\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    clickButton: function clickButton(display) {\n      return dispatch(_clickButton(display));\n    },\n    clearDisplay: function clearDisplay() {\n      return dispatch(_clearDisplay());\n    }\n  };\n}\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var Calculator = _ref.Calculator;\n  return {\n    display: Calculator.display,\n    isFinished: Calculator.isFinished\n  };\n};\n\nvar CalculatorClass =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CalculatorClass, _Component);\n\n  function CalculatorClass(props) {\n    var _this;\n\n    _classCallCheck(this, CalculatorClass);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CalculatorClass).call(this, props));\n\n    _this.onClick = function (value) {\n      var result;\n\n      var last = _this.props.display.split('')[_this.props.display.length - 1];\n\n      var change = {\n        display: _this.props.display,\n        isFinished: false\n      };\n\n      if (_this.props.display === '0') {\n        change.display = '';\n      }\n\n      switch (value) {\n        case '*':\n        case '-':\n        case '/':\n        case '+':\n          _this.repeatedOperator(value, last, change);\n\n          _this.props.clickButton({\n            change: change\n          });\n\n          break;\n\n        case '=':\n          if (_this.operators.includes(last)) {\n            var cut = _this.props.display.slice(0, _this.props.display.length - 1);\n\n            result = eval(cut).toString();\n          } else {\n            result = eval(_this.props.display).toString();\n          }\n\n          change.display = result;\n          change.isFinished = true;\n\n          _this.props.clickButton({\n            change: change\n          });\n\n          break;\n\n        case 'C':\n          _this.props.clearDisplay();\n\n          break;\n\n        default:\n          if (_this.props.isFinished) {\n            change.display = value;\n            change.isFinished = false;\n\n            _this.props.clickButton({\n              change: change\n            });\n          } else {\n            change.display += value;\n\n            _this.props.clickButton({\n              change: change\n            });\n          }\n\n          break;\n      }\n    };\n\n    _this.repeatedOperator = function (value, last, change) {\n      var regEx = /(0-9)*(\\*|\\+|\\-|\\/)(0-9)*/;\n\n      if (!_this.operators.includes(last)) {\n        if (!regEx.test(_this.props.display)) {\n          change.display += value;\n          change.isFinished = false;\n        } else {\n          var preResult = eval(_this.props.display).toString();\n          change.display = preResult + value;\n          change.isFinished = false;\n        }\n      } else {\n        _this.operators.map(function (operator) {\n          if (last !== operator) {\n            var cut = _this.props.display.slice(0, _this.props.display.length - 1);\n\n            cut += value;\n            change.display = cut;\n            change.isFinished = false;\n          }\n        });\n      }\n    };\n\n    _this.operators = [\"*\", \"+\", \"/\", \"-\"];\n    return _this;\n  }\n\n  _createClass(CalculatorClass, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Calculator\"), React.createElement(\"div\", {\n        className: \"calculator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Display, {\n        value: this.props.display,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Element, {\n        onClick: this.onClick,\n        value: \"7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(Element, {\n        onClick: this.onClick,\n        value: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Element, {\n        onClick: this.onClick,\n        value: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(Element, {\n        onClick: this.onClick,\n        value: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Element, {\n        onClick: this.onClick,\n        value: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(Element, {\n        onClick: this.onClick,\n        value: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(Element, {\n        onClick: this.onClick,\n        value: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(Element, {\n        onClick: this.onClick,\n        value: \"*\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Element, {\n        onClick: this.onClick,\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(Element, {\n        onClick: this.onClick,\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(Element, {\n        onClick: this.onClick,\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(Element, {\n        onClick: this.onClick,\n        value: \"-\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Element, {\n        onClick: this.onClick,\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(Element, {\n        onClick: this.onClick,\n        value: \"C\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(Element, {\n        onClick: this.onClick,\n        value: \"=\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(Element, {\n        onClick: this.onClick,\n        value: \"+\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return CalculatorClass;\n}(Component);\n\nvar Calculator = connect(mapStateToProps, mapDispatchToProps)(CalculatorClass);\nexport default Calculator;","map":{"version":3,"sources":["C:\\Users\\744338\\Desktop\\Todos-Calculator\\src\\containers\\Calculator\\index.jsx"],"names":["React","Component","Element","Display","connect","clickButton","clickOperator","clearDisplay","mapDispatchToProps","dispatch","display","mapStateToProps","Calculator","isFinished","CalculatorClass","props","onClick","value","result","last","split","length","change","repeatedOperator","operators","includes","cut","slice","eval","toString","regEx","test","preResult","map","operator"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Element from './components/Element';\r\nimport Display from './components/Display';\r\nimport { connect } from 'react-redux';\r\nimport { clickButton, clickOperator, clearDisplay } from './actions/calculatorActions';\r\nimport './styles.css';\r\nimport '../../styles.css';\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        clickButton: display => dispatch(clickButton(display)),\r\n        clearDisplay: () => dispatch(clearDisplay())\r\n    };\r\n}\r\n\r\nconst mapStateToProps = ({ Calculator }) => {\r\n    return {\r\n        display: Calculator.display,\r\n        isFinished: Calculator.isFinished\r\n    };\r\n};\r\nclass CalculatorClass extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.operators = [\"*\", \"+\", \"/\", \"-\"];\r\n    }\r\n\r\n    onClick = (value) => {\r\n        let result;\r\n        let last = this.props.display.split('')[this.props.display.length - 1];\r\n        let change = {\r\n            display: this.props.display,\r\n            isFinished: false\r\n        }\r\n        if (this.props.display === '0') {\r\n            change.display = '';\r\n        }\r\n        switch (value) {\r\n            case '*':\r\n            case '-':\r\n            case '/':\r\n            case '+':\r\n                this.repeatedOperator(value, last, change);\r\n                this.props.clickButton({change});\r\n                break;\r\n            case '=':\r\n                if (this.operators.includes(last)) {\r\n                    let cut = this.props.display.slice(0, (this.props.display.length - 1));\r\n                    result = eval(cut).toString();\r\n                } else {\r\n                    result = eval(this.props.display).toString();\r\n                }\r\n                change.display = result;\r\n                change.isFinished = true;\r\n                this.props.clickButton({change});\r\n                break;\r\n            case 'C':\r\n                this.props.clearDisplay();\r\n                break;\r\n            default:\r\n                if (this.props.isFinished) {\r\n                    change.display = value;\r\n                    change.isFinished = false;\r\n                    this.props.clickButton({change});\r\n                } else {\r\n                    change.display += value;\r\n                    this.props.clickButton({change});\r\n                }\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    repeatedOperator = (value, last, change) => {\r\n\r\n        let regEx = /(0-9)*(\\*|\\+|\\-|\\/)(0-9)*/\r\n        \r\n        if (!(this.operators.includes(last))) {\r\n\r\n            if (!(regEx.test(this.props.display))) {\r\n                change.display += value;\r\n                change.isFinished = false;\r\n            } else {\r\n                let preResult = eval(this.props.display).toString();\r\n                change.display = preResult + value;\r\n                change.isFinished = false;\r\n            }\r\n        } else {\r\n            this.operators.map(operator => {\r\n                if (last !== operator) {\r\n                    let cut = this.props.display.slice(0, (this.props.display.length - 1));\r\n                    cut += value;\r\n                    change.display = cut;\r\n                    change.isFinished = false;\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Calculator</h1>\r\n                <div className=\"calculator\">\r\n                    <Display value={this.props.display} />\r\n                    <div>\r\n                        <div className=\"row\">\r\n                            <Element onClick={this.onClick} value=\"7\" />\r\n                            <Element onClick={this.onClick} value=\"8\" />\r\n                            <Element onClick={this.onClick} value=\"9\" />\r\n                            <Element onClick={this.onClick} value=\"/\" />\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <Element onClick={this.onClick} value=\"4\" />\r\n                            <Element onClick={this.onClick} value=\"5\" />\r\n                            <Element onClick={this.onClick} value=\"6\" />\r\n                            <Element onClick={this.onClick} value=\"*\" />\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <Element onClick={this.onClick} value=\"1\" />\r\n                            <Element onClick={this.onClick} value=\"2\" />\r\n                            <Element onClick={this.onClick} value=\"3\" />\r\n                            <Element onClick={this.onClick} value=\"-\" />\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <Element onClick={this.onClick} value=\"0\" />\r\n                            <Element onClick={this.onClick} value=\"C\" />\r\n                            <Element onClick={this.onClick} value=\"=\" />\r\n                            <Element onClick={this.onClick} value=\"+\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst Calculator = connect(mapStateToProps, mapDispatchToProps)(CalculatorClass);\r\n\r\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}